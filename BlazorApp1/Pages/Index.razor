@page "/"
@using System.Timers

<PageTitle>Index</PageTitle>

<h1>TSD2490 - Oblig1</h1>

Finn to like ikoner for å vinne! Klarer du dette? Tviler...

<style>
	.container {
		width: 400px;
	}

	button {
		width: 100px;
		height: 100px;
		font-size: 50px;
	}
</style>

<div class="container">
	<div class="row">
		@foreach (var icon in shuffledEmojis)
		{
			<div class="col-3">
				<button @onclick="@(() => ButtonClick(icon))" type="button" class="btn btn-outline-dark">
					<h1>@icon</h1>
				</button>
			</div>
		}
	</div>
	<div class="row">
		<h2>Ikoner funnet: @matchesFound</h2>
	</div>
	<div class="row">
		<h2>Tid: @TimeDisplay</h2>
	</div>
	<div class="row">
		<button @onclick="@(() => StartTimer())" type="button" class="btn btn-outline-dark">Start spillet!</button>
	</div>
</div>

@code {
	List<List<string>> listWithEmojiLists = new List<List<string>>()
	{
		new List<string>
		{
			"☀","☀",
			"❄","❄",
			"⚡","⚡",
			"💧","💧",
			"🔥","🔥",
			"🌈","🌈",
			"🌙","🌙",
			"⭐","⭐"
		},
		new List<string>
		{
			"✈","✈",
			"🚀","🚀",
			"🚂","🚂",
			"🚜","🚜",
			"🚲","🚲",
			"🚑","🚑",
			"🚓","🚓",
			"🚒","🚒"
		},
		new List<string>
		{
			"🌻","🌻",
			"🥥","🥥",
			"🌲","🌲",
			"🥑","🥑",
			"🍉","🍉",
			"🍎","🍎",
			"🍓","🍓",
			"🌷","🌷"
		}
	};

	List<string> shuffledEmojis = new List<string>()
	{	};

	int matchesFound = 0;
	Timer timer;
	int timerStart = 0;
	string TimeDisplay;
	string lastEmojiFound = string.Empty;

	/**protected override void OnInitialized()
	{
		timer = new Timer(1000);
		timer.Elapsed += Timer_Tick;
		timer.Enabled = true;
		SetUpGame();
	}*/

	private void StartTimer()
	{
		timer = new Timer(1000);
		timer.Elapsed += Timer_Tick;
		timer.Start();
		SetUpGame();
	}

	private void SetUpGame()
	{
		Random random = new Random();
		int randomNumber = random.Next(0, 3);
		//Console.WriteLine("Random nummer: " + randomNumber);

		shuffledEmojis = listWithEmojiLists[randomNumber]
			.OrderBy(item => random.Next())
			.ToList();

		matchesFound = 0;

		timerStart = 20;
	}

	private void ButtonClick(string icon)
	{
		if(lastEmojiFound == string.Empty)
		{
			lastEmojiFound = icon;
			//timer.Start();
		}
		else if(lastEmojiFound == icon)
		{
			lastEmojiFound = string.Empty;

			shuffledEmojis = shuffledEmojis
				.Select(a => a.Replace(icon, string.Empty))
				.ToList();

			matchesFound++;
			if(matchesFound == 8)
			{
				timer.Stop();
				TimeDisplay += " - Spill igjen?";
				//restarter gamet
				//SetUpGame();
			}
		}
		else
		{
			lastEmojiFound = string.Empty;
		}

	}

	private void Timer_Tick(Object source, ElapsedEventArgs e)
	{
		InvokeAsync(() =>
		{
		/**tenthOfSecondsElapsed++;
		TimeDisplay = (tenthOfSecondsElapsed / 10F)
		.ToString("0.0 sek");*/
			if(timerStart > 0)
			{
				timerStart -= 1;
				TimeDisplay = (timerStart).ToString("0.0 sek");
			}
			else
			{
				timer.Enabled = false;
				//knapp for å starte på nytt her..
			}
			StateHasChanged();
		}
		);

	}
}